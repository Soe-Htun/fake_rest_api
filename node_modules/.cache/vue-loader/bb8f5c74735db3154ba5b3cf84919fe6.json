{"remainingRequest":"/Users/osx/Project/Vue/fake-rest-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/osx/Project/Vue/fake-rest-api/src/views/Home.vue?vue&type=style&index=0&id=7cb335e3&scoped=true&lang=css&","dependencies":[{"path":"/Users/osx/Project/Vue/fake-rest-api/src/views/Home.vue","mtime":1595305235000},{"path":"/Users/osx/Project/Vue/fake-rest-api/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/osx/Project/Vue/fake-rest-api/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/osx/Project/Vue/fake-rest-api/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/osx/Project/Vue/fake-rest-api/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/osx/Project/Vue/fake-rest-api/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2ltYWdlU2hvd3sKICB3aWR0aDogNjAlOwogIGhlaWdodDogNTAlOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBtYXJnaW46MiUgMTglOwogIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteCA7Cn0K"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoLA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n      <!-- table -->\n      <el-table height=\"750px\" :data=\"tableData.filter(data => !search || data.firstname.toLowerCase().includes(search.toLowerCase()))\" \n        border  style=\"width:80%;position:relative;left:10%;overflow:none\">\n\n        <el-table-column prop=\"firstname\" sortable label=\"FirstName\">\n        </el-table-column>\n        <el-table-column prop=\"lastname\" label=\"LastName\"></el-table-column>\n        <el-table-column prop=\"city\" label=\"City\"></el-table-column>\n        <el-table-column prop=\"phone_no\" label=\"Phone Number\"></el-table-column>\n        <el-table-column prop=\"email\" label=\"Email\"></el-table-column>\n        <el-table-column prop=\"companyName\" label=\"CompanyName\"></el-table-column>\n\n        <el-table-column prop=\"userImage\" label=\"Image\">\n        <template slot-scope=\"scope\">\n          <div>\n            <img id=\"imageShow\" :src=\"scope.row.userImage\" alt=\"\">\n          </div>\n        </template>\n        </el-table-column>\n\n        <el-table-column width=\"180px\">\n          <template slot=\"header\" slot-scope=\"scope\">\n            <el-input\n              v-model=\"search\" @click=\"search(scope.$index, scope.row)\"\n              placeholder=\"Type to search\"></el-input>\n          </template>\n          <template slot-scope=\"scope\">\n          <el-button type=\"primary\" style=\"width:75px;display:inline\" @click=\"handleEdit(scope.$index, tableData)\">Edit</el-button>\n          <el-button type=\"danger\" style=\"margin-left:5px;width:75px\" @click=\"handleDelete(scope.$index, scope.row)\">Delete</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n    <el-pagination\n      background \n      style=\"float:center\" \n      layout=\"prev, pager, next\"\n      :data=\"tableData\"\n      :total=\"100\" page-size=\"5\">\n    </el-pagination>\n\n      <!-- dialog -->\n      <el-dialog :visible.sync=\"dialogVisible\" :center=\"true\">\n          <el-form :model=\"rulesForm\" :inline=\"true\" style=\"text-align:center\">\n            <el-form-item label=\"First Name\">\n              <el-input v-model=\"rulesForm.firstname\" placeholder=\"\"></el-input>\n            </el-form-item><br>\n             <el-form-item label=\"Last Name\">\n              <el-input v-model=\"rulesForm.lastname\" placeholder=\"\"></el-input>\n            </el-form-item><br>\n             <el-form-item label=\"City\">\n              <el-input v-model=\"rulesForm.city\" style=\"margin-left:9.5%\" placeholder=\"\"></el-input>\n            </el-form-item><br>\n             <el-form-item label=\"Phone_no\">\n              <el-input v-model=\"rulesForm.phone_no\" placeholder=\"\"></el-input>\n            </el-form-item><br>\n             <el-form-item label=\"Email\">\n              <el-input v-model=\"rulesForm.email\" style=\"margin-left:6%\" placeholder=\"\"></el-input>\n            </el-form-item><br>\n             <el-form-item label=\"Companyame\" style=\"margin-right:3.5%\">\n              <el-input v-model=\"rulesForm.companyName\"  placeholder=\"\"></el-input>\n            </el-form-item><br>\n            <el-form-item style=\"margin-left:6%\">\n              <el-button type=\"primary\" style=\"width:85px;margin-right:25px\">Save</el-button>\n              <el-button type=\"primary\" style=\"width:85px\" @click=\"clear()\">Clear</el-button>\n            </el-form-item>\n          </el-form>\n      </el-dialog>\n\n      \n\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport axios from 'axios'\nconst baseUrl =\"http://localhost:3000/fakeapi\"\nexport default {\n  name: 'Home',\n  data(){\n    return{\n      dialogVisible:false,\n      tableData:[],\n      editItem:[],\n      search:'',\n      firstname:'',\n      lastname:'',\n      city:'',\n      phone_no:'',\n      email:'',\n      companyName:'',\n      userImage:'',\n      url:[],\n\n      rulesForm:{\n        firstname:'',\n        lastname:'',\n        city:'',\n        phone_no:'',\n        email:'',\n        companyName:'',\n      }\n    }\n  },\n  methods:{\n    getData(){\n      axios.get(baseUrl).then(res =>{\n        for(var i=0; i< res.data.length; i++){\n          this.tableData.push({\n            firstname: res.data[i].FirstName,\n            lastname :res.data[i].LastName,\n            city :res.data[i].City,\n            phone_no:res.data[i].Phone_no,\n            email:res.data[i].Email,\n            companyName:res.data[i].CompanyName,\n            userImage: res.data[i].UserImage\n          })\n          console.log(res.data);\n        }\n      })\n      \n    },\n    handleEdit(index,row) {\n      this.dialogVisible =true;\n      this.editItem =row[index];\n      this.rulesForm.firstname = this.editItem.firstname;\n      this.rulesForm.lastname = this.editItem.lastname;\n      this.rulesForm.city = this.editItem.city;\n      this.rulesForm.phone_no = this.editItem.phone_no;\n      this.rulesForm.email = this.editItem.email;\n      this.rulesForm.companyName = this.editItem.companyName;\n    },\n    handleDelete(index,row){\n      this.$confirm(\"Are you sure to delete this item?\", \"Warning\",{\n        confirmButtonText : \"OK\",\n        cancelButtonText : \"Cancel\",\n        type:\"warning\"\n      }).then(res =>{\n        axios.post(baseUrl,{\n          firstname:row.FirstName\n        }).then(res =>{\n            this.tableData.splice(index,1);\n            this.$message({\n              type:'success',\n              message:'Delete Successful'\n            })\n            console.log(res.data);\n        }).catch((e)=>{\n          this.$message({\n              type:'error',\n              message:e.message\n            })\n        })\n        console.log(res.data);\n        console.log(row);\n        \n      })\n    },\n    save(){\n      \n    },\n    clear(){\n      this.rulesForm.firstname=''\n      this.rulesForm.lastname=''\n      this.rulesForm.city=''\n      this.rulesForm.phone_no=''\n      this.rulesForm.email=''\n      this.rulesForm.companyName=''\n    }\n  },\n  created(){\n    this.getData();\n  }\n}\n</script>\n\n<style scoped>\n  #imageShow{\n    width: 60%;\n    height: 50%;\n    position: relative;\n    margin:2% 18%;\n    background-repeat: repeat-x ;\n  }\n</style>\n"]}]}